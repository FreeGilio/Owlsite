@startuml OWL

title OWL Architecture

' class GamemodeDto {
'     + string Name
'     + string Description
'     + int Amount_players
' }

' class GamemodeService {
'     + GamemodeService()
'     + void Gamemode()
'     + string CreateGamemode()
'     + string GetGamemodes()
'     + string AddToGamemode()
' }
package Presentation <<Rectangle>> {
Class CharacterController {
    - readonly CharacterService

    + CharacterController
    + Index()
}
}

package Core <<Rectangle>> {
Interface ICharacterRepository {
    +  List<CharacterDto> GetAllCharactersWithFightStyle();
    + CharacterDto GetCharacterDtoById(Int charId);
    + Int AddCharacterDto (CharacterDto Character);
    + Void DeleteCharacter(CharacterDto Character);
}

class Character {
    + string Name
    + string Description
    + string Image
    + bool Newly_added
}

class CharacterDto {
    + string Name
    + string Description
    + string Image
    + bool Newly_added
}

class CharacterService {
    - readonly ICharacterRepository

    + CharacterService(IcharacterRepository)
    + string CreateCharacter()
    + List<Character> GetAllCharacters()
    + string UpdateCharacter()
    + bool DetectNewlyAdded()
}
}

package DAL <<Rectangle>> {

class DatabaseConnection {
+ readonly string connectionString
+ DatabaseConnection(connectionString)

+ void StartConnection()
}
Class CharacterRepository {
    +  CharacterRepository(DatabaseConnection)
    +  List<CharacterDto> GetAllCharacters()
    -  CharacterDto MapCharacterDtoFromReader(SqlDataReader reader)
}
}


' class FightstyleDto {
'     + string Name
'     + int Power
'     + int Speed
' }

' class FightstyleService {

'     + FightstyleService()
'     + string GetStyles()
'     + string CreateStyle()
'     + string UpdateStyle()
'     + string AddStyleToChar()
' }

' class MoveDto {
'     + string Name
'     + string Description
'     + string Image
'     + string Motion
' }

' class MoveService {

'     + MoveService()
'     + string GetMoves()
'     + string CreateMove()
'     + string UpdateMove()
'     + string AddMoveToChar()
' }

' class NewsDto {
'     + string Title
'     + string Description
'     + string Image
' }

' class NewsService {

'     + NewsService()
'     + string GetArticles()
'     + string CreateArticle()
' }

' class CategoryDto {
'     + string Name
' }

' class CategoryService {
'     + CategoryService()
'     + string GetCategories()
' }

DatabaseConnection <-- CharacterRepository

CharacterController "1 CharacterService"--> CharacterService
Character "<<uses>>"<.. CharacterService
CharacterController "<<uses>>"..> Character
CharacterService "<<uses>>"..> CharacterDto
CharacterRepository "<<uses>>"..> CharacterDto
CharacterService --> ICharacterRepository
CharacterDto "<<uses>>" <.. ICharacterRepository
ICharacterRepository  <|.. CharacterRepository

' NewsService <-- NewsDto
' CategoryService <-- CategoryDto
' FightstyleService <-- FightstyleDto
' MoveService <-- MoveDto
' GamemodeService <-- GamemodeDto

@enduml